#summary Full overview of all files and folder

== / (Root folder) ==

<table border="1" cellspacing="1" cellpadding="2">
<tr><th>*Name*</th><th>*Description*</th></tr>
<tr>
<td>/.htaccess</td>
<td>Apache configuration file containing the URL rewrite rules. For details, see [UrlRewriteMap]</td>
</tr>
<tr>
<td>/api.php</td>
<td>Bootstrapper for API calls. Instanciates Waf_Api.class.php instead of Waf.class.php.</td>
</tr>
<tr>
<td>/css.php</td>
<td>All CSS files are treated by this PHP code before being sent to the browser. It minimizes the CSS and replaces certain parameters according the settings.</td>
</tr>
<tr>
<td>/index.php</td>
<td>All page requests are directed here. This file is called the bootstrapper</td>
</tr>
<tr>
<td>/js.php</td>
<td>The same as /css.php, but JS files are treated here.</td>
</tr>
<tr>
<td>/waf-database-model.mwb</td>
<td>This is a _MySQL Workbench_ file, which contains the database model for the default functionalities (users, roles, ...).</td>
</tr>
</table>

== /api ==
This folder contains the Core classes for the API interface
<table border="1" cellspacing="1" cellpadding="2">
<tr><th>*Name*</th><th>*Description*</th></tr>
<tr>
<td>/api/ApiHelper.class.php</td>
<td>A class with static helper functions for the API interface</td>
</tr>
<tr>
<td>/api/ApiReturnObject.class.php</td>
<td>This object is the container for returning data through the API</td>
</tr>
<tr>
<td>/api/iApiObject.class.php</td>
<td>Interface that defines how each API class must look like.</td>
</tr>
<tr>
<td>/api/WafApi.class.php</td>
<td>The core object for the API interface similar to the Waf object, but with different output and error handling.</td>
</tr>
</table>
== /application ==
This folder should contain all files concerning your application. No files outside this folder should be changed, unless you really know what you're doing!

<table border="1" cellspacing="1" cellpadding="2">
<tr><th>*Name*</th><th>*Description*</th></tr>
<tr>
<td>/application/settings.php</td>
<td>This file defines the {{{$settings}}} array containing all kinds of settings for your application.</td>
</tr>
</table>

== /application/api ==
If your application wants to use the RESTful API tools, all classes concerning the API must be kept here.

== /application/classes ==
Any classes that you create for your application should be stored here.

== /application/errorpages ==
This folder contains a few pages that are used by the error handler.

== /application/layout ==
All files concerning the layout are in here: Images, CSS, Javascript, the HTML master pages, etc ...

== /application/libraries ==
Libraries are extensions that can be used by all modules. They can contain PHP classes, Javascript, ...

== /application/modules ==
Modules are the essential building blocks of your application!

== /application/pages ==
Pages can have seperate content that doesn't belong in a module.

== /application/public ==
The public folder holds the public pages, which don't require authentication for them to work.

== /application/views ==
This folder contains all the application Views.

== /core ==
The core folder contains the most essential classes of the framework.

== /logs ==
This folder will be used to store the log files generated by the php4log library.